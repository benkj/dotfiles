# Options 
#   b   Beginning of line - A snippet with this option is expanded only if the
#       tab trigger is the first word on the line. In other words, if only
#       whitespace precedes the tab trigger, expand. The default is to expand
#       snippets at any position regardless of the preceding non-whitespace
#       characters.
#
#   i   In-word expansion - By default a snippet is expanded only if the tab
#       trigger is the first word on the line or is preceded by one or more
#       whitespace characters. A snippet with this option is expanded
#       regardless of the preceding character. In other words, the snippet can
#       be triggered in the middle of a word.
#
#   w   Word boundary - With this option, the snippet is expanded if
#       the tab trigger start matches a word boundary and the tab trigger end
#       matches a word boundary. In other words the tab trigger must be
#       preceded and followed by non-word characters. Word characters are
#       defined by the 'iskeyword' setting. Use this option, for example, to
#       permit expansion where the tab trigger follows punctuation without
#       expanding suffixes of larger words. This option overrides 'i'.
#
#   r   Regular expression - With this option, the tab trigger is expected to
#       be a python regular expression. The snippet is expanded if the recently
#       typed characters match the regular expression. Note: The regular
#       expression MUST be quoted (or surrounded with another character) like a
#       multi-word tab trigger (see above) whether it has spaces or not. A
#       resulting match is passed to any python code blocks in the snippet
#       definition as the local variable "match". Regular expression snippets
#       can be triggered in-word by default. To avoid this you can start your
#       regex pattern with '\b', although this will not respect your
#       'iskeyword' setting.
#
#   t   Do not expand tabs - If a snippet definition includes leading tab
#       characters, by default UltiSnips expands the tab characters honoring
#       the Vim 'shiftwidth', 'softtabstop', 'expandtab' and 'tabstop'
#       indentation settings. (For example, if 'expandtab' is set, the tab is
#       replaced with spaces.) If this option is set, UltiSnips will ignore the
#       Vim settings and insert the tab characters as is. This option is useful
#       for snippets involved with tab delimited formats.
#
#   s   Remove whitespace immediately before the cursor at the end of a line
#       before jumping to the next tabstop.  This is useful if there is a
#       tabstop with optional text at the end of a line.
#
#   m   Trim all whitespaces from right side of snippet lines. Useful when
#       snippet contains empty lines which should remain empty after expanding.
#       Without this option empty lines in snippets definition will have
#       indentation too.
#
#   e   Custom context snippet - With this option expansion of snippet can be
#       controlled not only by previous characters in line, but by any given
#       python expression. This option can be specified along with other
#       options, like 'b'. See |UltiSnips-custom-context-snippets| for more info.
#
#   A   Snippet will be triggered automatically, when condition matches.
#       See |UltiSnips-autotrigger| for more info.
#

global !p
def math():
	return (vim.eval('vimtex#syntax#in_mathzone()') == '1')

endglobal


snippet template "Basic template" b
\documentclass[aps,prx,twocolumn,notitlepage,superscriptaddress]{revtex4-2}
\usepackage{bm} \usepackage{graphicx} \usepackage{amsmath,amsthm,stmaryrd,amssymb} 
\usepackage{color}
\usepackage{hyperref}

\DeclareMathOperator*{\Tr}{Tr}
\DeclareMathOperator*{\ave}{\mathbb E}
\DeclareMathOperator*{\argmin}{argmin}
\DeclareMathOperator*{\argmax}{argmax}
\newcommand{\ket}[1]{\vert{#1}\rangle}
\newcommand{\kket}[1]{\vert{#1}\rangle\!\rangle}
\newcommand{\bra}[1]{\langle{#1}\vert}
\newcommand{\ketbra}[2]{\ket{#1}\!\bra{#2}}
\newcommand{\brakket}[2]{\langle\!\langle{#1}\vert{#2}\rangle\!\rangle}
\newcommand{\bs}[1]{\boldsymbol{#1}}


\begin{document}

\title{$1} 

\author{Leonardo Banchi et al. } \email{leonardo.banchi@unifi.it}
\affiliation{Department of Physics and Astronomy, University of Florence,
via G. Sansone 1, I-50019 Sesto Fiorentino (FI), Italy}
\affiliation{ INFN Sezione di Firenze, via G. Sansone 1, I-50019, Sesto Fiorentino (FI), Italy }

\begin{abstract}
\end{abstract}


\maketitle

$0


\end{document}
endsnippet


snippet response "Basic template for responses" b
\documentclass[aps,prx,onecolumn,notitlepage,superscriptaddress]{revtex4-2}
\usepackage{bm} \usepackage{graphicx} \usepackage{amsmath,amsthm,stmaryrd,amssymb} 
\usepackage{color}
\usepackage{hyperref}

\DeclareMathOperator*{\Tr}{Tr}
\DeclareMathOperator*{\ave}{\mathbb E}
\DeclareMathOperator*{\argmin}{argmin}
\DeclareMathOperator*{\argmax}{argmax}
\newcommand{\ket}[1]{\vert{#1}\rangle}
\newcommand{\kket}[1]{\vert{#1}\rangle\!\rangle}
\newcommand{\bra}[1]{\langle{#1}\vert}
\newcommand{\ketbra}[2]{\ket{#1}\!\bra{#2}}
\newcommand{\brakket}[2]{\langle\!\langle{#1}\vert{#2}\rangle\!\rangle}
\newcommand{\bs}[1]{\boldsymbol{#1}}
\usepackage[utf8]{inputenc}

\usepackage[final]{pdfpages}

% from
% https://tex.stackexchange.com/questions/266520/including-pdfpages-renders-rotated-revtex-4-1-pdflatex-output
\makeatletter
\AtBeginDocument{\let\LS@rot\@undefined}
\makeatother



\begin{document}

\title{$1
--\\  Response to referee's comments}

\author{Leonardo Banchi et al. } \email{leonardo.banchi@unifi.it}
\affiliation{Department of Physics and Astronomy, University of Florence,
via G. Sansone 1, I-50019 Sesto Fiorentino (FI), Italy}
\affiliation{ INFN Sezione di Firenze, via G. Sansone 1, I-50019, Sesto Fiorentino (FI), Italy }

\begin{abstract}
\end{abstract}

\date{\today}

\newcommand{\referee}[2]{ 
  \noindent
  {\bf Referee's comment}: {\it #1} 
  \\\\

  \noindent
  {\bf Our reply} :#2
  \\\\

  \vspace{5mm}
}

\maketitle

\section{Main changes}

\begin{enumerate}
	\item 
	\item 
\end{enumerate}
All changes can be checked via the difference file attached at the end of this response. 

\section{Response to Referee 1}


\clearpage
~
%\includepdf[pages=-]{diff.pdf}

\end{document}
endsnippet

snippet fiorentina "Fiorentina color for reviews" b
\definecolor{LB}{RGB}{134,41,198}%fiorentina color
\newcommand{\lb}[1]{\textcolor{LB}{ #1}}
endsnippet


context "math()" 
snippet rm "Mathrm" w
\mathrm{$1}$0
endsnippet


#snippet subornament "Subsection ornament" iA 
#\begin{tikzpicture}[remember picture, overlay, start chain, node distance=-2mm, shift={(-18mm, -12mm)}]
#    \node [on chain]  {\pgfornament[width=1.72cm, color=darkscarlet]{158}};
#\end{tikzpicture}
#endsnippet
#
#snippet secornament "Section prnament" iA 
#\begin{tikzpicture}[remember picture, overlay, start chain, node distance=-2mm, shift={(0mm, 10mm)}]
#    \foreach \i in {1,...,3}
#    \node [on chain]  {\pgfornament[width=6.72cm, color=darkscarlet]{71}};
#\end{tikzpicture}
#endsnippet
#
#context "math()" 
#snippet OB "Overbrace" iA 
#\overbrace{$1}{}
#endsnippet
#
#context "math()"
#snippet scr "\mathscr" iA 
#\mathscr{$1}
#endsnippet

#snippet $ "Math" iA 
#\$$1\$
#endsnippet

snippet ii "Italics" w
\\textit{$1}
endsnippet

snippet mcal "Math cal" w
\\mathcal{$1}
endsnippet

#snippet beg "begin{} / end{}" bA
#\\begin{$1}
#	$0
#\\end{$1}
#endsnippet
#
priority 100
snippet mset "Formal set" iA
\\{$1\\}
endsnippet

priority 100
snippet mbb "Math BB" iA
\mathbb{$1}
endsnippet

priority 100
snippet ... "ldots" iA
\ldots
endsnippet

snippet ali "Align" w
\begin{align}
	${1:${VISUAL}}
\end{align}
endsnippet

snippet ali* "Align" w
\begin{align*}
	${1:${VISUAL}}
\end{align*}
endsnippet

#context "math()"
#snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "symbol frac" wrA
#\\frac{`!p snip.rv = match.group(1)`}{$1}$0
#endsnippet
#
#priority 1000
#context "math()"
#snippet '^.*\)/' "() frac" wrA
#`!p
#stripped = match.string[:-1]
#depth = 0
#i = len(stripped) - 1
#while True:
#	if stripped[i] == ')': depth += 1
#	if stripped[i] == '(': depth -= 1
#	if depth == 0: break;
#	i-=1
#snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
#`{$1}$0
#endsnippet
#
#context "math()"
#snippet '([A-Za-z])(\d)' "auto subscript" wrA
#`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
#endsnippet
#
#context "math()"
#snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
#`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
#endsnippet
#
snippet lr1 "left( right)" iA
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr3 "left\{ right\}" iA
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lr2 "left[ right]" iA
\left[ ${1:${VISUAL}} \right] $0
endsnippet

context "math()"
snippet td "to the ... power" iA
^{$1}$0
endsnippet

context "math()"
snippet ^( "to the ... power" iA
^{($1)}$0
endsnippet

snippet __ "subscript" iA
_{$1}$0
endsnippet

snippet ooo "\infty" iA
\infty
endsnippet

snippet plot "Plot" w
\begin{figure}[$1]
	\centering
	\begin{tikzpicture}
		\begin{axis}[
			xmin= ${2:-10}, xmax= ${3:10},
			ymin= ${4:-10}, ymax = ${5:10},
			axis lines = middle,
		]
			\addplot[domain=$2:$3, samples=${6:100}]{$7};
		\end{axis}
	\end{tikzpicture}
	\caption{$8}
	\label{${9:$8}}
\end{figure}
endsnippet

snippet nn "Tikz node" w
\node[$5] (${1/[^0-9a-zA-Z]//g}${2}) ${3:at (${4:0,0}) }{$${1}$};
$0
endsnippet
 
snippet coo "Tikz coordinate" w
\coordinate ($1) at ($2);$0
endsnippet

snippet angle "Tikz Angle" w
\pic [draw, <-, "$1", angle eccentricity=1.5, angle radius=4mm] {angle = $2};$0
endsnippet

# vim:ft=snippets
